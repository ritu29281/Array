 int solve(char ch){
      switch(ch){
          case 'I': return 1; break;
          case 'V': return 5; break;
          case 'X': return 10; break;
          case 'L': return 50; break;
          case 'C': return 100; break;
          case 'D': return 500; break;
          case 'M': return 1000; break;
      }
      return -1;
  }
    int romanToDecimal(string &str) {
      int n=str.length();
      int curr,next;
      if(n==1) return solve(str[0]);
      int result=solve(str[n-1]);
       for(int i = n-2; i >= 0; --i){
          curr=solve(str[i]); next=solve(str[i+1]);
          if(curr>=next){
              result=result+curr;
             
          }
          else{
              result=result-curr;
             
          }
      }
      return result;
    }


LEETCODE:
    int value(char a){
        if(a=='I')
        return 1;
        if(a=='V')
        return 5;
        if(a=='X')
        return 10;
        if(a=='L')
        return 50;
        if(a=='C')
        return 100;
        if(a=='D')
        return 500;
        if(a=='M')
        return 1000;
    return 1;
    }
    int romanToInt(string s) {
       
       int ans =0;
    for(int i=0;i<s.length();i++){
     if((i+1)<s.length()){
        if(value(s[i])<value(s[i+1])){
            ans=ans+value(s[i+1])-value(s[i]);
            i++;
             }
       else{    
         ans=ans+value(s[i]);
         
        }
     } 
     else{
        ans=ans+value(s[i]);
    }    
       
  }
    return ans; 
    }
