Input:
N = 6
nums = {1,1,1,2,2,3}
k = 2
Output: {1, 2}

CODE:

 static bool myComp(const pair<int,int>&p1,const pair<int,int>&p2){
      if(p1.second==p2.second){
          return p1.first>p2.first;
      }
      return p1.second>p2.second;
  }
    vector<int> topK(vector<int>& nums, int k) {
      unordered_map<int,int>mp;
      for(int i=0;i<nums.size();i++){
          mp[nums[i]]++;
      }
      vector<int>ans;
      int i=0;
      int m=mp.size();
      vector<pair<int,int>>p(m);
      for(auto it=mp.begin();it!=mp.end();it++){
          p[i++]=make_pair(it->first,it->second);
      }
     sort(p.begin(), p.end(), myComp);
      for(int i=0;i<k;i++){
          ans.push_back(p[i].first);
      }
      return ans;
    }
