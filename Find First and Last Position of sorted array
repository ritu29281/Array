Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]

CODE:
class Solution {
public:
   int startingPos(vector<int>&nums,int target){
        int start=0,end=nums.size()-1;
        int ans=-1;
        while(start<=end){
            int mid=(start+end)/2;
            if(nums[mid]==target){
                end=mid-1;
                ans=mid;
            }
            else if(nums[mid]<target){
                start=mid+1;
            }
            else{
                end=mid-1;
            }
        }
        return ans;
    }
   int endingPos(vector<int>&nums,int target){
        int start=0,end=nums.size()-1;
        int ans=-1;
        while(start<=end){
            int mid=(start+end)/2;
            if(nums[mid]==target){
                start=mid+1;
                ans=mid;
            }
            else if(nums[mid]<target){
                start=mid+1;
            }
            else{
                end=mid-1;
            }
        }
        return ans;
    }
    vector<int> searchRange(vector<int>& nums, int target) {
       return  {startingPos(nums,target),endingPos(nums,target)};
        
    }

    
};
